#summary How to build the ITA data filtering tool
#labels Phase-Implementation
#sidebar TableOfContents

[http://code.google.com/p/iabin-threats/wiki/HowToBuildITA?wl=en http://data.gbif.org/images/flags/us.gif]
[es:HowToBuildITA http://data.gbif.org/images/flags/es.gif]

== Introduction ==

This is a technical document and is intended to people who has relation with the technical implementation of the project.

The purpose of this document is to illustrate how to build the project from the source code of this repository.

We invite you to read first the [Description] of the project.

== Technical Requirements ==

 * Apache Subversion SVN Client. [http://subversion.apache.org/packages.html Get it].
 * Apache Maven. [http://maven.apache.org/download.html Get it]
 * Java JRE version 6 or higher. [http://www.java.com/ Get it]

== 1. Checking out the source code ==

Check out the [http://code.google.com/p/iabin-threats/source/browse/#svn/trunk/ita ita project] of this repository.

 {{{svn checkout https://iabin-threats.googlecode.com/svn/branches/ita ita}}}
 
To update your local copy later, issue the command:
 
 {{{svn update}}}

The instructions for checking out from Google Code's SVN can be found [http://code.google.com/p/iabin-threats/source/checkout here]

== 2. Organizing code for Eclipse IDE ==

Once the source code has been checked out, if you want to organize it as a Eclipse IDE project, issue the command:

 {{{mvn eclipse:eclipse}}}

== 3. Compiling project ==

If you want to compile the project to get the binaries, issue the command:

 {{{mvn compile}}}

It creates the /target/classes directory where you can find the compiled classes
and the /target/rmi-classes where you can find the Stub classes to run the project using Remote Method Invocation [http://en.wikipedia.org/wiki/Java_remote_method_invocation Java RMI]

== 4. Packaging project ==

If you want to deploy the .jar file of the project, issue the command:

 {{{mvn package}}}

Then you can find the .jar in the /target directory, named _ita_ with the current version of the project _e.g. ita-0.1-SNAPSHOT.jar_

Compiling step is not necessary since packaging includes the compiling process to create the jar

== 5. Using project ==

After packaging project now you can use the services provided by the project. And after [Configuring] the project you can run it with _java_ commands

You can see the [API] page to know how to use the classes of the project or run directly any of the executable classes.


=== 5.1 Running as stand alone ===

If you have configured the project as stand alone you just need to execute the jar directly:

 {{{java -Xmx1500m -jar ita-0.1-SNAPSHOT.jar}}}

=== 5.2 Running as client-server ===

If the configuration is not stand alone case, you must run first an instance as server by calling the main of the _org.ciat.ita.server.Server_ class

 {{{java -cp ita-0.1-SNAPSHOT.jar org.ciat.ita.server.Server}}}

And then you can run several instances as clients by calling the main of the _org.ciat.ita.client.Client_ class or with just the same command of the stand alone running.