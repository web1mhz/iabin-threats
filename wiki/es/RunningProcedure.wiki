#summary Pasos para utilizar la herramienta de filtrado de datos.
#labels Featured
#sidebar TableOfContents

[http://code.google.com/p/iabin-threats/wiki/RunningProcedure?wl=en http://iabin-threats.googlecode.com/svn/wiki/resources/gb.gif]
[http://code.google.com/p/iabin-threats/wiki/RunningProcedure?wl=es http://iabin-threats.googlecode.com/svn/wiki/resources/es.gif]

<wiki:toc />

= Introducción =

Pasos para utilizar la herramienta de filtrado de datos.
  
===1 Configurando archivos===
====Descripción====
En primer lugar, se deben establecer los valores para los parámetros de los archivos de configuración XML _server_config.xml_ and _client_config.xml_.
 
Si no hay archivos de configuración, los puede generar con los valores por defecto, mediante el script descrito en la sección de Procedimiento técnico. A continuación, puede editar los parámetros para establecer los valores correspondientes.  

La mayoría de los parámetros corresponden a las rutas de archivos y rutas de directorios. Los ejemplos para la configuración correcta de estos archivos se encuentran en el código fuente del proyecto.

Por favor, configure los archivos, incluso si sólo quiere que se ejecute en modo local.

*Salidas:* Configuración de archivos: _server_config.xml_ y _client_config.xml_.

====Procedimiento Técnico====
Ejecute el script en java con los siguientes parámetros para la parte del servidor: 

 {{{java -cp ita.jar org.ciat.ita.server.ServerConfig}}}

y para la parte del cliente: 

 {{{java -cp ita.jar org.ciat.ita.client.ClientConfig}}}

A continuación edite los archivos server_config.xml and client_config.xml 
  
   
===2 Filtrado Básico===
====Descripción====
Primero procesamos un filtrado basico de los registros lo cual excluye a los que no tienen valores latitud o longitud, la geospatial_issue es diferente de cero, la base de registro no especie y opcionalmente auqellos een los que la especie tiene menos de diez registros 

*Entradas:* Tabla MySQL con los registros de ocurrencias de la base de datos. 

*Salidas:* Varias tablas temporales (temp_land_1A, temp_land_2A, temp_land_3A, temp_land_4A y temp_land_5A ). La tabla temp_land_4A table contiene todos los registros que pasaron los filtros, y la tabla temp_land_5A está vacía y preparada para ser llenada en el siguiente paso.

====Procedimiento Técnico====
Ejecute en la base de datos la consulta sql del arhivo llamado “QUERY_basic_filter.sql” 

Ejemplo de la línea de comando: 

 {{{mysql –u User –p portal < QUERY_basic_filter.sql }}}

====Finalizar====
Una vez que la consulta se ha ejecutado, las tablas temp_land_1A, temp_land_2A and temp_land_3A ya no se necesitan, por lo que pueden ser borradas. Las tablas temp_land_4A and temp_land_5A se utilizarán en el siguiente paso. 

===3 Obteniendo el archivo JGM===
====Descripción====
Si no tiene el archivo jgm para el paso de filtrar las especies no terrestres, puede descargarlo de :: //TODO download URL

O puede crearlo usando un archivo de máscara ASCII y el script WorldMaskManager. 

====Procedimiento Técnico====
Ejecute el script en java con los siguientes parámetros: 

*Parámetros:
 {{{jgm}}} Para ejecutar el algoritmo de conversión 

 {{{-Xmx<BYTES>}}} Máximo tamaño de bytes de almacenamiento dinámico de Java

 {{{<MASK>}}} Ruta de acceso absoluta del archivo de máscara ascii

 {{{-k <KILOMETERS>}}} Distancia de la costa considerada como "cerca de tierra"

*Línea de comando:*

 {{{java -XmxBYTES -cp ita.jar org.ciat.ita.client.manage.WorldMaskManager jgm -m MASK -k KILOMETERS}}}

Por ejemplo, la creación de un archivo de JGM en sistema de archivos Linux con un radio de 5 kilómetros: 

 {{{java -Xmx1000m -cp ita.jar org.ciat.ita.client.manage.WorldMaskManager jgm -m /home/inland_mask/inland_msk.asc -k 5 }}}

  
===4 Filtrando especies no terrestres===
====Description====
Los registros de especies no terrestres que no son posibles de evaluar. En consecuencia, las especies no terrestres deben ser discriminadas y las terrestres almacenadas en la tabla _temp_land_5A_ .

Un método confiable para hacer esto, sería la de conocer el _nub_concept_id_ de todas las especies no terrestres y filtrar los registros de  _temp_land_4A_ e insertar sólo los terrestres que están en la tabla _temp_land_5A_ . Pero todos estos nub_concept_id son dificiles de conocer. Asi que en este paso las especies no terrestres se pueden determinar de la siguiente manera: 
  
Se determina para cada registro, si es terrestre o no, utilizando una máscara terrestre. Una vez que todos los registros se han evaluado, se dertermina el porcentaje de registros no terrestres para esa especie, si este porcentaje es igual o superior al 90%, entonces la especie se considera no terrestre. Sólo los registros de las especies terrestres se insertan en la tabla temp_land_5A table.


*Entradas:* _temp_land_4A_ tabla records, archivo de máscara terrestre “inland_msk.jgm” 

*Salidas:* _temp_land_5A_ Tabla llena con los registros de especies terrestres. 

====Procedimiento Técnico====
Ejecute el script en java con los siguientes parámetros: 

 {{{-Xmx<BYTES>}}} Máximo tamaño de bytes de almacenamiento dinámico de Java

 {{{terreval}}} cadena de caracteres para filtrar especies no-terrestres

 {{{-n <NUMBER>}}} de registros que deben ser analizados para mostrar las estadísticas de tiempo.

Línea de comando: 

 {{{java -XmxBYTES -cp ita.jar org.ciat.ita.client. manage.WorldMaskManager terreval -n NUMBER}}}

Ejemplo: 

 {{{java -Xmx1000m -cp ita.jar org.ciat.ita.client.manage.WorldMaskManager terreval -n 100000}}}

*Finalizar:* Una vez que el script se ha ejecutado, la tabla temp_land_4A no se necesita más. Por lo tanto se puede borrar. 
   

===5 Obteniendo el archivo EMM ===

Si no tiene el archivo Emm todo en uno (bioAIO.emm) requerido para el paso de evaluación geoespacial, lo puede descargar de:  //TODO download URI

O puede crearlo usando el archivo ASCII original de las variables bioclimáticas especificadas en el XML de configuración cliente y el script EnvironmentMaskManager.

====Procedimiento Técnico====
*Parametros:*

 {{{-d <VARS>}}} Ruta de acceso absoluta de la carpeta de variables ambientales.

*Línea de comando:*

 {{{java -XmxBYTES -cp ita.jar org.ciar.ita.client. manage.EnvironmentMaskManager -d VARS_FOLDER}}}

Ejemplo para Linux: 

 {{{java -Xmx1000m -cp ita.jar org.ciat.ita.client. manage.EnvironmentMaskManager -d /home/bio_asc}}}

===6 Evaluación Geoespacial===
====Descripción====
Evalúa los registros usando recursos geoespaciales.

*Entradas:* _temp_land_5A_ tabla Contiene los registros de especies terrestres. Archivo Shape _GADM_v0-6.shp_, archivo de máscara terrestre _inland_msk.jgm_ (el formato jgm es necesario) y el archivo de variables ambientales _BioAIO.emm_ y el archivo de formato _BioAIO.format_ 

*Salidas:* Las tablas temp_good_records y temp_bad_records contiene los datos de acuerdo a los resultados de evaluación. Si el registro pasó todos los filtros, estos datos con los correspondientes datos ambientales  deben estar en la tabla temp_good_records. Por el contrario, si los registros se reconocen como no confiables, sus datos deberian estar en la tabla bad_records con el tipo de error correspondiente encontrado. 

Posibles valores de error: 
*M:* Fuera de la máscara
*NC:* País nulo
*WC:* País errado
*O:* En el Mar
*NL:* Cerca de tierra 

====Procedimiento Técnico====
Primero, debe ejecutar el archivo sql llamado “QUERY_create_GBtables.sql” en la base de datos 

ejemplo: 

 {{{mysql portal < QUERY_create_GBtables.sql }}}

Una vez que se crean las tablas, tiene la opción de ejecutar el script geoespacial en modo local cliente-servidor.


===Modo Local===

En modo local sólo tiene que ejecutar una instancia.

*Parámetros:*
 {{{-Xmx<BYTES>}}} Máximo tamaño de bytes de almacenamiento dinámico de Java

*Línea de comando:*

 {{{java -XmxBYTES -cp ita.jar}}}

Ejemplo: 

 {{{java -Xmx1500m -jar ita.jar}}}

===Cliente-Servidor===

En primer lugar hay que ejecutar una instancia como servidor, después, puede ejecutar varias instancias en el cliente.

*Parámetros:*
 {{{-Xmx<BYTES>}}} Máximo tamaño de bytes de almacenamiento dinámico de Java

*Línea de comando del servidor:*

 {{{java -XmxBYTES -cp ita.jar org.ciat.ita.server.Server }}}

ejemplo: 

 {{{java -Xmx20000m -cp ita.jar org.ciat.ita.server.Server }}}

*Línea de comando del cliente:*

 {{{java -XmxBYTES -cp ita.jar org.ciat.ita.client.Client }}}

ejemplo: 

 {{{java -Xmx1500m -cp ita.jar org.ciat.ita.client.Client }}}

*Finalizar:* Una vez que el script se ha ejecutado, la tabla temp_land_5A no se necesita más, por lo que se puede borrar. 
  
  
  
===7 Evaluación ambiental ===
====Descripción====
Dentro de cada especie calcular el valor máximo y el valor mínimo de cada variable ambiental para determinar si el registro es un caso atípico para esa variable.
 
*Entradas:* _temp_good_records_ tabla que contiene los registros geoespaciales confiables y los datos ambientales correspondientes

*Salidas:* _temp_good_records_  tabla con el numero valores atípicos para todas las variables

====Procedimiento Técnico====
Ejecute el script en java con los siguientes parámetros: 
  
 {{{-Xmx<BYTES>}}} Máximo tamaño de bytes de almacenamiento dinámico de Java

Ejecute el escript en java 

Línea de comando: 

 {{{java -XmxBYTES -cp ita.jar org.ciat.ita.server.OutliersManager }}}

ejemplo: 

 {{{java -Xmx2000m -cp ita.jar org.ciat.ita.server.OutliersManager }}}

	  
  
  
===8 (Opcional) Obteniendo estadisticas geoespaciales y ambientales===

====Descripción==== 
Este es un paso opcional. Su objetivo es extraer algunos datos estadísticos de los pasos de filtrado. cuántos registros son fiables y cuántos no, especificando el tipo de error. 

*Entradas:* _temp_good_records_ tabla con el numero valores atípicos para todas las variables
*Salidas:* El archivo XML _statistics.xml_ es generado. Contiene todas las estadísticas del conjunto de registros evaluados

====Procedimiento Técnico====
Ejecute el script con los siguientes parámetros: 
  
*Línea de comando:*

 {{{java  -cp ita.jar org.ciat.ita.server.database.DataBaseStatistics}}}

	    
===10 Filtro final de datos fiables===
====Descripción==== 

Discrimina los registros que tienen valor atípico en más de 16 distribuciones de variables ambientales y aquellos para los que la especie tiene menos de diez registros. Sólo los registros confiables se almacenan en la tabla final llamada filtered_records 

*Entradas:* 	temp_good_records tabla con el numero valores atípicos para todas las variables

*Salidas:* 	filtered_records tabla que contiene la totalidad de registros confiables.

====Procedimiento Técnico====
Ejecute en la base de datos el archivo sql llamado "QUERY_final_filter.sql"  

ejemplo: 

 {{{mysql -u User -p portal < QUERY_final_filter.sql}}}

  
*Finalizar:* Las tablas temp_good_records y temp_bad_records no se necesitan más. Las tablas temporales temp_good_1A, temp_good_2A, temp_good_3A ya no se usan, solo se usaron para la consulta, por lo que se pueden borrar. 

  
===11 Exportación de registros en un archivo separado por comas===
====Descripción====
Exportación de los registros confiables en un archivo separado por comas, para que sean usados en Maxent
 

*Entradas:* _filtered_records_ tabla que contiene todos los registros confiables

*Salidas:* Un archivo separado por comas _filtered_records.csv_ con los registros confiables 

====Procedimiento Técnico====
Ejecute el script en java usando los siguientes parámetros: 
  
*Parámetros:* 
 {{{csv}}} Para ejecutar el método correspondiente para la exportación de un archivo csv por especie. 
 {{{-Xmx<BYTES>}}}  Máximo tamaño de bytes de almacenamiento dinámico de Java
 {{{-n <NUMBER>}}} de los registros que deben ser analizadas para mostrar las estadísticas de tiempo
 {{{-d <OUTPUT>}}} Ubicación exacta del directorio. 

*Línea de comando:*

 {{{java -XmxBYTES -cp ita.jar client.correctormanager.MaxentManager csv -n NUMBER -d OUTPUT}}}

ejemplo: 

 {{{java -Xmx1000m -cp ita.jar client.correctormanager.MaxentManager csv -n 1000 -d /home/output }}}
  

====12 Generar proyecciones de las especies con Maxent====
===Descripción===
Este script genera los archivos lambda e inmediatamente despues genera las proyecciones de los datos de especies usando la aplicación maxent y las variables ambientales.

*Entradas:* Las variables ambientales preferiblemente con una resolución baja. jar ejecutable de Maxent.

*Salidas:* Archivos ascii de proyección de especies 

====Procedimiento Técnico====
Ejecute el script en java con los siguientes parámetros: 

*Parámetros:*
 {{{-Xmx<BYTES>}}} Máximo tamaño de bytes de almacenamiento dinámico de Java
 {{{maxent}}} Para ejecutar el script correspondiente para generar proyecciones de las especies 
 {{{-i <INSTANCES>}}} de Maxent que se ejecutará al mismo tiempo.

*Línea de comando:*

 {{{java -XmxBYTES  -cp ita.jar client.correctormanager.MaxentManager maxent -i INSTANCES }}}

ejemplo: 

 {{{java -Xmx1000m -cp ita.jar client.correctormanager.MaxentManager maxent -i 4}}}   
 